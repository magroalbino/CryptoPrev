// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview DeFi Oracle AI agent that suggests the best DeFi protocols for maximizing stablecoin yield.
 *
 * - analyzeDefiProtocols - A function that handles the analysis of DeFi protocols.
 * - AnalyzeDefiProtocolsInput - The input type for the analyzeDefiProtocols function.
 * - AnalyzeDefiProtocolsOutput - The return type for the analyzeDefiProtocols function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { getProtocolData } from '@/lib/defi-protocols';
import type { Protocol } from '@/lib/defi-protocols';

const AnalyzeDefiProtocolsInputSchema = z.object({
  stablecoin: z.string().describe('The stablecoin to analyze protocols for (e.g., USDC).'),
  riskTolerance: z
    .string()
    .describe(
      'The users risk tolerance.  Can be one of the following values: low, medium, or high.'
    ),
  investmentAmount: z.number().describe('The amount of stablecoin to invest.'),
});
export type AnalyzeDefiProtocolsInput = z.infer<typeof AnalyzeDefiProtocolsInputSchema>;

const ProtocolSuggestionSchema = z.object({
  protocolName: z.string().describe('The name of the suggested DeFi protocol.'),
  apy: z.number().describe('The APY (Annual Percentage Yield) of the protocol.'),
  lockupPeriod: z
    .string()
    .describe('The lock-up period for the protocol (e.g., No lockup, 30 days, 90 days).'),
  estimatedMonthlyYield: z
    .number()
    .describe('The estimated monthly yield in dollars based on the investment amount.'),
  risks: z.string().describe('The risks associated with the protocol.'),
  strategyDescription: z
    .string()
    .describe('A detailed description of the DeFi strategy for the specified protocol.'),
});

const AnalyzeDefiProtocolsOutputSchema = z.object({
  suggestions: z.array(ProtocolSuggestionSchema).describe("A list of the top 3 DeFi protocol suggestions.")
});
export type AnalyzeDefiProtocolsOutput = z.infer<typeof AnalyzeDefiProtocolsOutputSchema>;

export async function analyzeDefiProtocols(
  input: AnalyzeDefiProtocolsInput
): Promise<AnalyzeDefiProtocolsOutput> {
  return analyzeDefiProtocolsFlow(input);
}

const getProtocolDataTool = ai.defineTool(
    {
        name: 'getProtocolData',
        description: 'Get real-time data for top DeFi protocols like Aave, Compound, and Curve.',
        inputSchema: z.object({}),
        outputSchema: z.array(z.object({
            name: z.string(),
            tvl: z.number(),
            apy: z.number(),
            riskFactor: z.enum(['low', 'medium', 'high']),
        })),
    },
    async () => {
        return getProtocolData();
    }
);


const prompt = ai.definePrompt({
  name: 'analyzeDefiProtocolsPrompt',
  input: {schema: AnalyzeDefiProtocolsInputSchema},
  output: {schema: AnalyzeDefiProtocolsOutputSchema},
  tools: [getProtocolDataTool],
  prompt: `You are a DeFi (Decentralized Finance) expert. You are tasked with suggesting the best DeFi strategies for maximizing stablecoin yield for a user, based on their risk tolerance and investment amount.

**Crucially, you MUST use the getProtocolData tool to fetch the latest APYs and data for DeFi protocols.** Base your recommendations on the data returned by the tool to provide the most accurate and up-to-date suggestions.

Analyze strategies for the following stablecoin: {{{stablecoin}}}
Risk Tolerance: {{{riskTolerance}}}
Investment Amount: {{{investmentAmount}}}

Your recommendations should be based on well-known, real-world DeFi strategies. For each suggestion, consider the following:

*   **Strategy Type:** Base your suggestions on common, proven strategies like:
    *   **Lending/Borrowing:** Suggesting supplying assets to protocols like Aave or Compound.
    *   **Liquidity Providing:** Suggesting providing liquidity to stablecoin-only pools (e.g., Curve 3pool).
*   **APY (Annual Percentage Yield):** Use the APY from the tool.
*   **Lock-up Period:** Mention if the strategy involves a lock-up period (most lending protocols don't have one).
*   **Risks:** Clearly explain the primary risks in simple terms (e.g., smart contract risk, de-pegging risk for stablecoins, impermanent loss for liquidity pools).
*   **Strategy Description:** Briefly explain how the strategy generates yield.

Based on these criteria, recommend the top 3 DeFi strategies for the user. Ensure the output matches the requested schema.
`,
});

const analyzeDefiProtocolsFlow = ai.defineFlow(
  {
    name: 'analyzeDefiProtocolsFlow',
    inputSchema: AnalyzeDefiProtocolsInputSchema,
    outputSchema: AnalyzeDefiProtocolsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
