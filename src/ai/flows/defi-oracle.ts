// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview DeFi Oracle AI agent that suggests the best DeFi protocols for maximizing stablecoin yield.
 *
 * - analyzeDefiProtocols - A function that handles the analysis of DeFi protocols.
 * - AnalyzeDefiProtocolsInput - The input type for the analyzeDefiProtocols function.
 * - AnalyzeDefiProtocolsOutput - The return type for the analyzeDefiProtocols function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeDefiProtocolsInputSchema = z.object({
  stablecoin: z.string().describe('The stablecoin to analyze protocols for (e.g., USDC).'),
  riskTolerance: z
    .string()
    .describe(
      'The users risk tolerance.  Can be one of the following values: low, medium, or high.'
    ),
  investmentAmount: z.number().describe('The amount of stablecoin to invest.'),
});
export type AnalyzeDefiProtocolsInput = z.infer<typeof AnalyzeDefiProtocolsInputSchema>;

const ProtocolSuggestionSchema = z.object({
  protocolName: z.string().describe('The name of the suggested DeFi protocol.'),
  apy: z.number().describe('The APY (Annual Percentage Yield) of the protocol.'),
  lockupPeriod: z
    .string()
    .describe('The lock-up period for the protocol (e.g., No lockup, 30 days, 90 days).'),
  estimatedMonthlyYield: z
    .number()
    .describe('The estimated monthly yield in dollars based on the investment amount.'),
  risks: z.string().describe('The risks associated with the protocol.'),
  strategyDescription: z
    .string()
    .describe('A detailed description of the DeFi strategy for the specified protocol.'),
});

const AnalyzeDefiProtocolsOutputSchema = z.object({
  suggestions: z.array(ProtocolSuggestionSchema).describe("A list of the top 3 DeFi protocol suggestions.")
});
export type AnalyzeDefiProtocolsOutput = z.infer<typeof AnalyzeDefiProtocolsOutputSchema>;

export async function analyzeDefiProtocols(
  input: AnalyzeDefiProtocolsInput
): Promise<AnalyzeDefiProtocolsOutput> {
  return analyzeDefiProtocolsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeDefiProtocolsPrompt',
  input: {schema: AnalyzeDefiProtocolsInputSchema},
  output: {schema: AnalyzeDefiProtocolsOutputSchema},
  prompt: `You are a DeFi (Decentralized Finance) expert. You are tasked with analyzing DeFi protocols to find the best options for maximizing stablecoin yield for the user, based on their risk tolerance and investment amount.  Provide the top 3 best options for the user.

Analyze DeFi protocols for the following stablecoin: {{{stablecoin}}}
Risk Tolerance: {{{riskTolerance}}}
Investment Amount: {{{investmentAmount}}}

Consider the following factors when recommending each protocol:

*   **APY (Annual Percentage Yield):** Prioritize protocols with higher APYs.
*   **Lock-up Period:**  Consider protocols with shorter lock-up periods, but also present options with longer lock-up periods if the APY is significantly higher.
*   **Risks:**  Thoroughly evaluate the risks associated with each protocol, including smart contract risk, impermanent loss, and liquidation risk.  Present these risks to the user in simple terms.
*   **Strategy Description:** Provide a detailed description of the DeFi strategy for the specified protocol.

Based on the above criteria, recommend the top 3 best DeFi protocols for the user.
`,
});

const analyzeDefiProtocolsFlow = ai.defineFlow(
  {
    name: 'analyzeDefiProtocolsFlow',
    inputSchema: AnalyzeDefiProtocolsInputSchema,
    outputSchema: AnalyzeDefiProtocolsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
